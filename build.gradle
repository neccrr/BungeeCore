plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group = 'NecroCore'
version = '2.0.0-SNAPSHOT'

repositories {
    // Maven Central
    mavenCentral()
    // BungeeCord API repository
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    // Lombok Annotations
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // BungeeCord API
    compileOnly 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'
    // LuckPerms API
    compileOnly 'net.luckperms:api:5.4'
    // Cloud Command Framework
    compileOnly 'cloud.commandframework:cloud-bungee:1.7.1'
    compileOnly 'cloud.commandframework:cloud-core:1.7.1'
    compileOnly 'cloud.commandframework:cloud-annotations:1.8.1'
    compileOnly 'cloud.commandframework:cloud-minecraft-extras:1.7.1'
    compileOnly 'net.kyori:adventure-platform-bungeecord:4.1.2'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    expand props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}